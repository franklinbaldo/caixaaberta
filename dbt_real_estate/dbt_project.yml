
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'dbt_real_estate'
version: '0.1.0' # Adjusted version

# This setting configures which "profile" dbt uses for this project.
# It will look for this profile in the profiles.yml file.
profile: 'dbt_real_estate_profile' # Renamed for clarity, will match profiles.yml

# These configurations specify where dbt should look for different types of files.
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"] # We will use this for our CSVs
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

clean-targets: # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"
  - "logs" # Add logs to clean targets

# Default materialization for models can be set here.
# For DuckDB, 'table' or 'view' are common. 'ephemeral' is also useful.
# We can also configure this per model or per directory.
models:
  dbt_real_estate:
    # Example of how to configure models under the 'staging' directory if we create one
    # staging:
    #   +materialized: view
    # Example of how to configure models under the 'marts' directory
    # marts:
    #   +materialized: table
    # For now, no specific model configurations are set globally here,
    # they can be defined in individual model files or subdirectories.
    # The default dbt-duckdb materialization is 'view'.

# Configuration for seeds (our CSV files)
# Full documentation: https://docs.getdbt.com/docs/build/seeds
seeds:
  dbt_real_estate:
    # This will apply to all seeds in the project
    +quote_columns: false # Set to true if your CSV values might contain the delimiter
    # Define column types to override dbt's auto-detection where needed
    +column_types:
      link: varchar # Property IDs, treated as strings
      endereco: varchar
      bairro: varchar
      descricao: varchar
      preco: double   # Monetary value, will be numeric
      avaliacao: double # Monetary value, will be numeric
      desconto: varchar # Raw format is "X%", string. Transformation needed for numeric use.
      modalidade: varchar
      foto: varchar
      cidade: varchar
      estado: varchar(2) # Max 2 characters for state codes like 'SP'
    # You can specify schemas for seeds if necessary, e.g.
    # +schema: raw_data # This would put all seed tables into the 'raw_data' schema
    # To ensure CSVs are loaded into a specific database (if using multiple)
    # +database: '{{ env_var("DUCKDB_DATABASE", "real_estate_data.db") }}'

# Specify that profiles.yml is inside this project directory
# This is not a standard dbt_project.yml setting.
# Instead, we will instruct users to set the DBT_PROFILES_DIR environment variable
# or use the --profiles-dir CLI argument when running dbt commands.
# For example: dbt run --profiles-dir .
# Alternatively, dbt looks in ~/.dbt/profiles.yml by default.
# For this project, we will create a profiles.yml inside dbt_real_estate
# and assume it's used by setting DBT_PROFILES_DIR=dbt_real_estate
# or by running dbt commands from within the dbt_real_estate directory
# if dbt supports finding a profiles.yml in the current working directory's .dbt subdirectory
# or the project root. For dbt-duckdb, it's often easiest to specify the db file path directly.
